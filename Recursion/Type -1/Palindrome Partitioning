https://leetcode.com/problems/palindrome-partitioning/

class Solution {
    public List<List<String>> partition(String s) {
        
        List<List<String>> ans = new ArrayList<>();
        sol(new ArrayList<>(),ans,s,0);
        return ans;


    }

    public void sol(ArrayList<String> temp, 
    List<List<String>> ans, String s, int index){

        if(index==s.length()){
            ans.add(new ArrayList<>(temp));
            return;
        }

        for(int i= index;i<s.length();i++){
            if(ispalindrome(s,index,i)){
                temp.add(s.substring(index,i+1));
                sol(temp,ans,s,i+1);
                temp.remove(temp.size()-1);
            }
        }
    }

    public boolean ispalindrome ( String s, int start,
     int end){
        while(start<=end){
            if(s.charAt(start++)!=s.charAt(end--))
            return false;
        }
        return true;
    }
}